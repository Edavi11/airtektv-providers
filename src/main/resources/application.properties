# local db
# spring.datasource.url=jdbc:postgresql://localhost:5432/airtek_channels
# spring.datasource.username=postgres
# spring.datasource.password=admin

# # local docker-compose db
# spring.datasource.url=jdbc:postgresql://localhost:5442/airtek_channels_java
# spring.datasource.username=postgres
# spring.datasource.password=postgres

# dockerized docker-compose app and db
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

spring.datasource.driver-class-name=org.postgresql.Driver
# spring.datasource.initialization-mode=always
spring.jpa.show-sql=true

# if this activate and spring.jpa.hibernate.ddl-auto is set like "create", hibernate will build the tables with the models with @Table Annotation
# spring.jpa.hibernate.ddl-auto=none
# spring.jpa.defer-datasource-initialization=true

# this run the schema.sql and data.sql
spring.sql.init.mode=always

spring.jpa.properties.hibernate.format_sql=true
logging.level.org.springframework.jdbc.datasource.init=DEBUG

json.path=./src/main/resources/data/init.json
json.providers=./src/main/resources/data/providers.json

# json.path=init.json
# json.providers=providers.json